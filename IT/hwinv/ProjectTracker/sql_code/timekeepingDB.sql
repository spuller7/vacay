CREATE DATABASE IF NOT EXISTS ProjectTrackingDB;

USE ProjectTrackingDB;

CREATE TABLE Users (
			UserID INT NOT NULL AUTO_INCREMENT,
			Username VARCHAR(32) CHARACTER SET Latin1 NOT NULL COLLATE latin1_bin,
			PasswordHash VARCHAR(32) CHARACTER SET Latin1 NOT NULL,
			FullName VARCHAR(64) NOT NULL,
			State ENUM('active', 'terminated', 'suspended'),
			PartTime BOOL DEFAULT FALSE,
			CreateDate TIMESTAMP NOT NULL DEFAULT 0,
			LastUpdate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
			PRIMARY KEY (UserID)
			);
			
CREATE INDEX name_ind ON Users(FullName);
			
create table RoleDescriptions
		(
			Role VARCHAR(32) CHARACTER SET Latin1 UNIQUE NOT NULL COLLATE latin1_bin,
			Description VARCHAR(64) CHARACTER SET Latin1 NOT NULL,
			PRIMARY KEY ( Role )
		);
		
CREATE TABLE Roles (		
			UserID INT NOT NULL,
			Role VARCHAR(32) CHARACTER SET Latin1 NOT NULL COLLATE latin1_bin,
			CreateDate TIMESTAMP NOT NULL DEFAULT NOW(),
			LastUpdate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
			FOREIGN KEY (UserID) REFERENCES Users(UserID),
			FOREIGN KEY (Role) REFERENCES RoleDescriptions(Role),
			PRIMARY KEY (UserID, Role)
			);
			
insert into RoleDescriptions values ('ADMINISTRATOR', 'Master Administrator Privilege');
insert into RoleDescriptions values ('USER', 'Basic User');
insert into RoleDescriptions values ('MANAGER', 'Manages users');

CREATE TABLE IF NOT EXISTS PROJECTS (
PROJECT_ID INTEGER NOT NULL AUTO_INCREMENT,
PROJECT_NAME VARCHAR(255),
START_DATE DATETIME,
END_DATE DATETIME,
PROJECT_MANAGER_ID INTEGER,
IS_ACTIVE BOOLEAN,
IS_RD BIT DEFAULT 0,
FOREIGN KEY (PROJECT_MANAGER_ID) REFERENCES Users(UserID),
PRIMARY KEY(PROJECT_ID));

CREATE INDEX PROJECT_NAME_IND ON PROJECTS(PROJECT_NAME);
CREATE INDEX START_DATE_IND ON PROJECTS(START_DATE);
CREATE INDEX END_DATE_IND ON PROJECTS(END_DATE);
CREATE INDEX PROJECT_MANAGER_ID_IND ON PROJECTS(PROJECT_MANAGER_ID);
CREATE INDEX IS_ACTIVE_PROJECT_IND ON PROJECTS(IS_ACTIVE);

CREATE TABLE IF NOT EXISTS PROJECT_ENTRIES (
PROJECT_ID INTEGER NOT NULL,
UserID INTEGER NOT NULL,
EFFORT FLOAT NOT NULL,
ISSUES TEXT,
UPCOMING_GOALS TEXT,
PREVIOUS_GOALS TEXT,
ACCOMPLISHMENTS TEXT,
ENTRY_STATE ENUM('COMPLETE','PARTIAL','NONE'),
IS_SUMMARY BOOLEAN,
MISC TEXT,
HEALTH ENUM('RED','YELLOW','GREEN'),
ENTRY_DATE,
FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(PROJECT_ID),
FOREIGN KEY (UserID) REFERENCES Users(UserID),
PRIMARY KEY (PROJECT_ID,UserID,ENTRY_DATE));

CREATE INDEX PROJECT_ID_ENTRIES_IND ON PROJECT_ENTRIES(PROJECT_ID);
CREATE INDEX UserID_ENTRIES_IND ON PROJECT_ENTRIES(UserID);
CREATE INDEX ENTRY_DATE_IND ON PROJECT_ENTRIES(ENTRY_DATE);
CREATE INDEX ENTRY_STATE_IND ON PROJECT_ENTRIES(ENTRY_STATE);
CREATE INDEX IS_SUMMARY_IND ON PROJECT_ENTRIES(IS_SUMMARY);
CREATE INDEX HEALTH_IND ON PROJECT_ENTRIES(HEALTH);

CREATE TABLE IF NOT EXISTS PROJECT_ASSIGNMENT (
PROJECT_ID INTEGER NOT NULL,
UserID INTEGER NOT NULL,
PRIMARY_CONTRIBUTOR BOOLEAN,
FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(PROJECT_ID),
FOREIGN KEY (UserID) REFERENCES Users(UserID),
PRIMARY KEY (PROJECT_ID,UserID));

CREATE TABLE IF NOT EXISTS PROJECT_LAYOUT (
UserID int(11),
LAYOUT text,
PAGE enum('OVERALL','PROJECTS'),
FOREIGN KEY (UserID) REFERENCES Users(UserID),
PRIMARY KEY(UserID,PAGE));

CREATE INDEX PROJECT_ID_ASSIGNMENT_IND ON PROJECT_ASSIGNMENT(PROJECT_ID);
CREATE INDEX UserID_ASSIGNMENT_IND ON PROJECT_ASSIGNMENT(UserID);
CREATE INDEX PRIMARY_CONTRIBUTOR_IND ON PROJECT_ASSIGNMENT(PRIMARY_CONTRIBUTOR);

INSERT INTO Users VALUES (0, 'root', md5('root:timekeeping:projtroofus'), 'Root Admin', 1, false, Now(), Now() );
INSERT INTO Roles VALUES ((Select UserID from Users where Username='root'), 'ADMINISTRATOR', Now(), Now() );
INSERT INTO Users VALUES(-1, 'god', '', 'god', 1, false, now(), now());
INSERT INTO PROJECTS (PROJECT_NAME, START_DATE, END_DATE, PROJECT_MANAGER_ID, IS_ACTIVE) VALUES ("Misc",NOW(),NOW(),1,TRUE);
